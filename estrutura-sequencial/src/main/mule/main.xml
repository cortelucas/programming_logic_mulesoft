<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd ">
    <http:listener-config name="estrutura-sequencial-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="estrutura-sequencial-config" api="estrutura-sequencial.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="estrutura-sequencial-main">
        <http:listener config-ref="estrutura-sequencial-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[(vars.outboundHeaders default {}) ++ {
	"Content-Encoding": "UTF-8"
}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="estrutura-sequencial-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="estrutura-sequencial-console">
        <http:listener config-ref="estrutura-sequencial-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="estrutura-sequencial-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\exe-01:estrutura-sequencial-config">
		<logger level="INFO" doc:name="init_flow" doc:id="01a47308-c92f-4464-859a-3fbc51f19cb5" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform doc:name="set_payload" doc:id="64ffecac-a9b9-47a6-ac25-5a7395c1ed21" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: "Alo Mundo!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="64dc7aa8-767b-4a5f-ae25-bb72083a5dc3" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="get:\lista-de-exercicios:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="ba35afbf-003d-4616-82ee-b5ab169a1b83" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json  encoding="UTF-8"
---
{
  "exe-01": "Faça um Programa que mostre a mensagem 'Alo mundo' na tela.",
  "exe-02": "Faça um Programa que peça um número e então mostre a mensagem O número informado foi [número]",
  "exe-03": "Faça um Programa que peça dois números e imprima a soma.",
  "exe-04": "Faça um Programa que peça as 4 notas bimestrais e mostre a média.",
  "exe-05": "Faça um Programa que peça as 4 notas bimestrais e mostre a média.",
  "exe-06": "Faça um Programa que peça o raio de um círculo, calcule e mostre sua área.",
  "exe-07": "Faça um Programa que calcule a área de um quadrado, em seguida mostre o dobro desta área para o usuário.",
  "exe-08": "Faça um Programa que pergunte quanto você ganha por hora e o número de horas trabalhadas no mês. Calcule e mostre o total do seu salário no referido mês.",
  "exe-09": "Faça um Programa que peça a temperatura em graus Fahrenheit, transforme e mostre a temperatura em graus Celsius: C = 5 * ((F-32) / 9)",
  "exe-10": "Faça um Programa que peça a temperatura em graus Celsius, transforme e mostre em graus Fahrenheit.",
  "exe-11": {
    exe: "Faça um Programa que peça 2 números inteiros e um número real. Calcule e mostre:",
    options: {
      a: "o produto do dobro do primeiro com metade do segundo .",
      b: "a soma do triplo do primeiro com o terceiro.",
      c: "o terceiro elevado ao cubo."
    }
  },
  "exe-12": "Tendo como dados de entrada a altura de uma pessoa, construa um algoritmo que calcule seu peso ideal, usando a seguinte fórmula: (72.7*altura) - 58",
  "exe-13": {
    exe: "Tendo como dado de entrada a altura (h) de uma pessoa, construa um algoritmo que calcule seu peso ideal, utilizando as seguintes fórmulas:",
    options: {
      a: "Para homens: (72.7*h) - 58",
      b: "Para mulheres: (62.1*h) - 44.7"
    }
  },
  "exe-14": "João Papo-de-Pescador, homem de bem, comprou um microcomputador para controlar o rendimento diário de seu trabalho. Toda vez que ele traz um peso de peixes maior que o estabelecido pelo regulamento de pesca do estado de São Paulo (50 quilos) deve pagar uma multa de R\$ 4,00 por quilo excedente. João precisa que você faça um programa que leia a variável peso (peso de peixes) e calcule o excesso. Gravar na variável excesso a quantidade de quilos além do limite e na variável multa o valor da multa que João deverá pagar. Imprima os dados do programa com as mensagens adequadas.",
  "exe-15": {
    exe: "Faça um Programa que pergunte quanto você ganha por hora e o número de horas trabalhadas no mês. Calcule e mostre o total do seu salário no referido mês, sabendo-se que são descontados 11% para o Imposto de Renda, 8% para o INSS e 5% para o sindicato, faça um programa que nos dê:",
    options: {
      a: "salário bruto.",
      b: "quanto pagou ao INSS.",
      c: "quanto pagou ao sindicato.",
      d: "o salário líquido.",
      e: {
        exe: "calcule os descontos e o salário líquido, conforme a tabela abaixo:",
        example: "+ Salário Bruto : R\$ - IR (11%) : R\$ - INSS (8%) : R\$ - Sindicato ( 5%) : R\$ = Salário Liquido : R\$"
      }
    }
  },
  "exe-16": "Faça um programa para uma loja de tintas. O programa deverá pedir o tamanho em metros quadrados da área a ser pintada. Considere que a cobertura da tinta é de 1 litro para cada 3 metros quadrados e que a tinta é vendida em latas de 18 litros, que custam R\$ 80,00. Informe ao usuário a quantidades de latas de tinta a serem compradas e o preço total.",
  "exe-17": {
    exe: "Faça um Programa para uma loja de tintas. O programa deverá pedir o tamanho em metros quadrados da área a ser pintada. Considere que a cobertura da tinta é de 1 litro para cada 6 metros quadrados e que a tinta é vendida em latas de 18 litros, que custam R\$ 80,00 ou em galões de 3,6 litros, que custam R\$ 25,00. Informe ao usuário as quantidades de tinta a serem compradas e os respectivos preços em 3 situações:",
    options: {
      a: "comprar apenas latas de 18 litros;",
      b: "comprar apenas galões de 3,6 litros;",
      c: "misturar latas e galões, de forma que o desperdício de tinta seja menor. Acrescente 10% de folga e sempre arredonde os valores para cima, isto é, considere latas cheias."
    }
  },
  "exe-18": "Faça um programa que peça o tamanho de um arquivo para download (em MB) e a velocidade de um link de Internet (em Mbps), calcule e informe o tempo aproximado de download do arquivo usando este link (em minutos)."
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="a71ac93d-0fe5-4666-9ed6-ea296c4f9f0e" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-02:application\json:estrutura-sequencial-config">
		<logger level="INFO" doc:name="init_flow" doc:id="959da537-4aed-4b38-a801-bf7d62097fbf" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform doc:name="Transform Message" doc:id="9d434d36-3a5e-4bf4-acd5-4e2ebb9d601b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: "O número informado foi " ++ payload.number
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="9a5723d7-dff6-43c9-acab-407034930a87" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-03:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="e0ca5632-22b4-45be-940b-4528d7852ef4" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: payload.number_01 ++ " + " ++ payload.number_02 ++ " = " ++ (payload.number_01 + payload.number_02)
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="2f90afd2-674f-4bc4-a343-c763fcb38cd4" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-04:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="7537a319-5985-4e63-9d9d-b16fc329b693" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var soma = payload.nota_01 + payload.nota_02 + payload.nota_03 + payload.nota_04
---
{
  response: "A nota média foi: " ++ (soma / 4)
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="b35f9c5d-e09d-4451-b872-f34a46b49f7a" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-05:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="76b13322-7454-4590-bb00-8cdcbd587a59" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: payload.metros ++ "m = " ++ (payload.metros * 100) ++ "cm"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="6e543621-15f9-4fd0-91be-8161b8154193" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-06:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="f0ce60f0-d2b4-43db-b933-48f9cc92b357" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
import PI from dw::util::Math

var area_circulo = (PI as Number) * (payload.raio * payload.raio)
---
{
  response: "A área correspondente a um círculo com " ++ payload.raio ++ " de raio é: " ++ (area_circulo as String { format: '#.##'})
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="5aa8b375-80f1-4dae-a13f-f979012d1076" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-07:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="3fa5e314-b64d-4c2f-8e07-c4b3b9f86ffd" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: {
    area: "A área do quadrado é: " ++ (payload.lado_quadrado * payload.lado_quadrado) ++ " m2",
    dobro_area: "O dobro desta área é: " ++ (payload.lado_quadrado * payload.lado_quadrado) * 2 ++ " m2"
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="3e9dad14-7139-40e9-83b0-e6d207ab488e" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-08:application\json:estrutura-sequencial-config">
		<logger level="INFO" doc:name="init_flow" doc:id="5bedff12-e0db-4ed8-a34c-7d88749128dc" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: "Seu salário será de: R\$ " ++ (payload.salario_por_horas * payload.horas_trabalhadas_mes)
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="9a8e8336-f173-43ff-a785-bf13f59b00f8" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-09:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="be0d9492-7d99-42ce-89ec-b4ff9fe24ede" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var graus_celsius = 5 * ((payload.graus_fahrenheit - 32) / 9)
---
{
  response: payload.graus_fahrenheit ++ "ºF = " ++ graus_celsius ++ "ºC"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="984eab22-6410-4d9f-885e-aeffbccbff47" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-10:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="934ce6db-da12-4183-ba4a-f54c07a5ad1c" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var graus_fahrenheit = (payload.graus_celsius * 1.8) + 32
---
{
  response: payload.graus_celsius ++ "°C = " ++ graus_fahrenheit ++ "°F"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="10f6d6ea-9823-45a6-95ed-c9df92542077" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-11:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="7f205bd3-5bfd-4d84-87d2-d8ac87287b94" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: {
    a: (payload.numero_inteiro_01 pow 2) * (payload.numero_inteiro_02 / 2),
    b: (payload.numero_inteiro_01 * 3) + payload.numero_real,
    c: (payload.numero_real pow 3)
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="470691c1-c165-4f2a-a9ac-f755eae74b75" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-12:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="2d8ace51-aabb-42f9-ba89-98855db0b78e" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var peso_ideal = (72.7 * payload.altura) - 58
---
{
  response: "Seu peso ideal é: " ++ peso_ideal ++ " Kg"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="602c85fd-32cc-4de3-a165-0c288dbb7efb" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-13:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="8363e689-5e2f-450d-b515-aa19781d5400" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"
---
{
  response: {
    homem: "Peso ideal é: " ++ ((72.7 * payload.altura) - 58) ++ " Kg",
    mulher: "Peso ideal é: " ++ ((62.1 * payload.altura) - 44.7) ++ " Kg"
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="c11fffee-7d98-4bb0-b5e7-002f1778b382" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-14:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="591f97ef-a692-4acf-9dd5-defb732d32c7" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var excesso = payload.peso - 50
var multa = excesso * 4
---
if (excesso >= 0)
	{
	  response: {
	    excesso: "Peso excedente é: " ++ excesso ++ " Kg",
	    multa: "Multa é: R\$ " ++ multa  as String { format: '#.##' }
	  } 
	}
else
	{
	  response: {
	    excesso: "Peso excedente é: 0 Kg",
	    multa: "Multa é: R\$ 0.00"
	  } 
	}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="f01d4f01-2923-4be9-b4bf-933ac54d2799" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-15:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="40c7ef4e-cfc2-4120-8603-89c8e3426ebb" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var salario_bruto: Number = payload.valor_da_hora * payload.horas_trabalhadas
var ir: Number = salario_bruto * 0.11
var inss: Number = salario_bruto * 0.08
var sindicato: Number = salario_bruto * 0.05
var salario_liquido: Number = salario_bruto - ir - inss - sindicato
---
{
  response: {
    salario_bruto: "R\$ " ++ salario_bruto as String { format: '#.##' },
    ir: "R\$ " ++ ir as String { format: '#.##' },
    inss: "R\$ " ++ inss as String { format: '#.##' },
    sindicato: "R\$ " ++ sindicato as String { format: '#.##' },
    salario_liquido: "R\$ " ++ salario_liquido as String { format: '#.##' }
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="5f8b4884-4e89-4279-b422-a72f56bf7816" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-16:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="b97ca67b-e108-41d9-bdd2-6bc45900e1ae" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var area_pintada: Number = payload.tamanho_m_quadrado
var litros: Number = area_pintada / 3
var latas: Number = ceil(litros / 18)
var preco: Number = latas * 80 

---
{
  response: {
    total_latas: latas,
    valor: "R\$ " ++ preco as String { format: '#.##' }
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="4854d695-7a21-4f64-86df-cf0e0d9d62a1" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-17:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="fefc70ab-d8b0-4fcc-b6cd-b33eca0969c2" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var area_pintada: Number = payload.tamanho_m_quadrado
var litros: Number = area_pintada / 6

// Latas
var latas: Number = ceil(litros / 18)
var preco_latas: Number = latas * 80

// Galões
var galoes: Number = ceil(litros / 3.6)
var preco_galoes: Number = galoes * 25

// Misturado
var folga: Number = litros * 1.1
var latas_inteiras: Number = floor(folga / 18)
var resto: Number = folga mod 18
var galoes_inteiros: Number = ceil(resto / 3.6)

var preco_mistura: Number = (latas_inteiras * 80) + (galoes_inteiros * 25)
---
{
  response: {
    latas_18: {
      total: latas,
      valor: "R\$ " ++ preco_latas as String { format: '#.##' }
    },
    "latas_3.6": {
      total: galoes,
      valor: "R\$ " ++ preco_galoes as String { format: '#.##' }
    },
    misturado: {
      total: {
          latas: latas_inteiras,
          galoes: galoes_inteiros
      },
      valor: "R\$ " ++ preco_mistura as String { format: '#.##' }
    }
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="b67703e2-502a-40f5-a4c0-eab1ba4d9679" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
    <flow name="post:\exe-18:application\json:estrutura-sequencial-config">
        <logger level="INFO" doc:name="init_flow" doc:id="7b278392-321b-401a-abad-113282d6f76b" message='#["Init flow -&gt; " ++ flow.name]' />
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8"

var tempo_download: Number = ((payload.tamanho_em_mb * 8) / payload.velocidade_em_mbps) / 60

var minutos: Number = floor(tempo_download)
var segundos: Number = floor(((payload.tamanho_em_mb * 8) / payload.velocidade_em_mbps) mod 60)
---

{
  response: "Tempo de download: " ++ minutos ++ " Minuto(s) " ++ segundos ++ " Segundo(s)."
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="end_flow" doc:id="aa1a8db9-7a4d-4320-b0ac-631a88a49c0e" message='#["End flow -&gt; " ++ app.name]' />
    </flow>
</mule>
